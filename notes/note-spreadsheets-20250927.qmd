---
title: "spreadsheets"
author: "Sharon Howard"
date: "2025-09-27"
categories: [readxl, import, wip]
execute:
  warning: false
  message: false
---

## Includes

```{r}
source(here::here('R/shared.R'))
```

## Notes

I've accumulated many bits of code for working with spreadsheets (mainly Excel; sometimes ODS), and can never remember how to use them. So this is a page to bring them together.

```{r}
#library(readxl) # loaded in shared
library(writexl)
library(readODS)
```


## Examples

 https://readxl.tidyverse.org/articles/articles/readxl-workflows.html

### read in multiple sheets in an xlsx, selectively

there are two functions to this 

1. get a list of sheets in a spreadsheet (and name them)
2. read in selected sheets one at a time from the list using sheets$sheetname

nb:

- I've added guess to the second function because read_excel's default is hardly ever generous enough to deal with the weirdness of historical spreadsheets
- janitor::clean_names() is used for much the same reason. The names of sheets and columns in sheets are frequently hideous. 

```{r}
read_all_sheets <- function(path){
  path |>
    excel_sheets() |>
    set_names() |>
    clean_names("snake")
}

read_a_sheet <- function(sheet, path, guess=1000) {
  path |>
    read_excel(sheet = sheet, guess_max = guess) |>
    clean_names(case="snake") 
}
```




```{r}
apprentices_path <- here::here("data/apprenticeship_disputes.xlsx") 

# this will give a bunch of "New names" messages if not suppressed
apprentices_sheets <-
  apprentices_path |>
  read_all_sheets() |>
  map(read_a_sheet, path=apprentices_path, guess=10000)

apprentices_main_index <-
  apprentices_sheets$main_index
```

Occasionally there might be a lot of sheets that you want to get out of a spreadsheet, so the individual sheet$name method would get tedious.

The function `list2env()` can be used to put *all of* the sheets from the list as separate DFs into your R environment, but use that function very carefully (eg if any of the sheet names are the same as existing objects it'll overwrite them without any warning).

```{r}
## list2env(apprentices_sheets, envir = .GlobalEnv)
```


### same for ODS spreadsheets

TODO: this should work but I need to get an .ods file to test it.


```{r}
read_ods_sheets <- function(path){
  path |>
    ods_sheets() |>
    set_names()
}

read_ods_sheet <- function(sheet, path) {
  path |>
    read_ods(sheet = sheet) |>
    clean_names(case="snake") 
}

```



### write several DFs to a single xlsx as separate tabs

TODO.

